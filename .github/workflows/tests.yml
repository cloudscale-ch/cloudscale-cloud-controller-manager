name: Tests

on:
  push:
    branches:
      - main

  pull_request:

  # Allow to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Run this regularly, to get integration tests results against new
  # Kubernetes releases.
  schedule:
    - cron: '15 15 * * 5'

permissions:
  contents: read

env:
  GO_VERSION: 1.21

jobs:
  lint:
    name: "Run Linters"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '${{ env.GO_VERSION }}'

      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cache/golangci-lint
            ~/.cache/go-build
          key: lint-${{ hashFiles('go.mod') }}

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.55.2

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@2023.1.6

      - name: Run Linter
        run: make lint

      - name: Save cache
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.cache/golangci-lint
            ~/.cache/go-build
          key: lint-${{ hashFiles('go.mod') }}

  unit:
    name: "Run Unit Tests"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '${{ env.GO_VERSION }}'

      - name: Run Unit Tests
        run: make test

  test-matrix:
    name: "Get Kubernetes Releases"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: "Generate Test Matrix"
        id: list
        run: 'echo "tests=$(helpers/test-matrix)" >> $GITHUB_OUTPUT'

    outputs:
      tests: ${{ steps.list.outputs.tests }}

  integration:
    name: "Kubernetes ${{ matrix.kubernetes }}"
    runs-on: ubuntu-latest

    needs:
      - lint
      - unit
      - test-matrix

    strategy:
      fail-fast: false
      matrix:
        include: "${{ fromJson(needs.test-matrix.outputs.tests) }}"

    env:
      CLOUDSCALE_API_TOKEN: ${{ secrets.CLOUDSCALE_API_TOKEN }}
      KUBERNETES: '${{ matrix.kubernetes }}'
      SUBNET: '${{ matrix.subnet }}'
      CLUSTER_PREFIX: '${{ matrix.cluster_prefix }}'

    # Prevent integration tests from running in parallel. Ideally this should
    # be seuqential, but that won't work due to the following issue:
    #
    # https://github.com/orgs/community/discussions/5435
    #
    # Instead we ensure that only one integration test per supported version
    # is run at any given time.
    concurrency:
      group: integration-${{ matrix.kubernetes }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '${{ env.GO_VERSION }}'

      - name: Create Test Cluster
        run: helpers/run-in-test-cluster

      - name: Wait For CCM Startup
        run: sleep 60

      - name: Run Integration Tests
        run: make integration

      - name: Destroy Test Cluster
        if: always()
        run: helpers/cleanup
